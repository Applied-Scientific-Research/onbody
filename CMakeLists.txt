CMAKE_MINIMUM_REQUIRED ( VERSION 2.6 )
PROJECT ( onbody )

SET (CMAKE_VERBOSE_MAKEFILE on)

IF (CMAKE_COMPILER_IS_GNUCXX)
  SET (CMAKE_CXX_FLAGS "-Wall -Wformat -std=c++11")
  SET (CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS} -ggdb")
  SET (CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -O2 -march=native -ffast-math -ftree-vectorize -ftree-loop-vectorize")
ELSEIF (CMAKE_CXX_COMPILER_ID STREQUAL "Clang")
  SET (CMAKE_CXX_FLAGS "-Wall -Wformat -std=c++11 -stdlib=libc++")
ELSEIF (MSVC)
  SET (CMAKE_CXX_FLAGS "/Ox")
ENDIF ()

IF ( WIN32 )

  SET ( PLATFORM_LIBS ${FRAMEWORK_LIBS} )

ELSEIF ( APPLE )

  INCLUDE_DIRECTORIES ( /System/Library/Frameworks )
  FIND_LIBRARY (COCOA_LIBRARY Cocoa)
  FIND_LIBRARY (IOKIT_LIBRARY IOKit)
  MARK_AS_ADVANCED (COCOA_LIBRARY IOKIT_LIBRARY)

  SET (PLATFORM_LIBS ${FRAMEWORK_LIBS} ${COCOA_LIBRARY} ${IOKIT_LIBRARY})

  FIND_PACKAGE (OpenMP REQUIRED)
  IF (OPENMP_FOUND)
    MESSAGE ("OPENMP FOUND")
    SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
  ENDIF ()


ELSEIF ( UNIX )

  FIND_PACKAGE( OpenMP REQUIRED)
  IF (OPENMP_FOUND)
    MESSAGE ("OPENMP FOUND")
    SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} ${OpenMP_C_FLAGS}")
    SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${OpenMP_CXX_FLAGS}")
    SET (CMAKE_EXE_LINKER_FLAGS "${CMAKE_EXE_LINKER_FLAGS} ${OpenMP_EXE_LINKER_FLAGS}")
  ENDIF ()

ENDIF ()

INCLUDE_DIRECTORIES ( "src" )

ADD_EXECUTABLE ( "onvort2d" "src/onvort2d.cpp" )
ADD_EXECUTABLE ( "ongrav3d" "src/ongrav3d.cpp" )

#TARGET_LINK_LIBRARIES ( ${PROJECT_NAME} ${PLATFORM_LIBS} )

